diff --git a/src/js/assets.js b/src/js/assets.js
index ad343006..259a49f9 100644
--- a/src/js/assets.js
+++ b/src/js/assets.js
@@ -351,7 +351,7 @@ const registerAssetSource = function(assetKey, dict) {
         entry.contentURL = [];
     }
     if ( typeof entry.updateAfter !== 'number' ) {
-        entry.updateAfter = 5;
+        entry.updateAfter = 3;
     }
     if ( entry.submitter ) {
         entry.submitTime = Date.now(); // To detect stale entries
@@ -918,7 +918,7 @@ api.rmrf = function() {
 // Asset updater area.
 var updaterStatus,
     updaterTimer,
-    updaterAssetDelayDefault = 120000,
+    updaterAssetDelayDefault = 300000,
     updaterAssetDelay = updaterAssetDelayDefault,
     updaterUpdated = [],
     updaterFetched = new Set(),
diff --git a/src/js/background.js b/src/js/background.js
index 0d9d5824..364468fa 100644
--- a/src/js/background.js
+++ b/src/js/background.js
@@ -38,8 +38,8 @@ const µBlock = (function() { // jshint ignore:line
     const hiddenSettingsDefault = {
         assetFetchTimeout: 30,
         autoCommentFilterTemplate: '{{date}} {{origin}}',
-        autoUpdateAssetFetchPeriod: 120,
-        autoUpdatePeriod: 7,
+        autoUpdateAssetFetchPeriod: 300,
+        autoUpdatePeriod: 4,
         cacheStorageAPI: 'unset',
         cacheStorageCompression: true,
         cacheControlForFirefox1376932: 'no-cache, no-store, must-revalidate',
@@ -48,7 +48,7 @@ const µBlock = (function() { // jshint ignore:line
         disableWebAssembly: false,
         ignoreRedirectFilters: false,
         ignoreScriptInjectFilters: false,
-        manualUpdateAssetFetchPeriod: 500,
+        manualUpdateAssetFetchPeriod: 1,
         nanoIgnoreThirdPartyWhitelist: false,
         nanoMakeThirdPartyFiltersPrivileged: false,
         nanoMakeUserFiltersPrivileged: false,
@@ -65,6 +65,7 @@ const µBlock = (function() { // jshint ignore:line
         'chrome-extension-scheme',
         'chrome-scheme',
         'moz-extension-scheme',
+        'ms-browser-extension-scheme',
         'opera-scheme',
         'vivaldi-scheme',
         'wyciwyg-scheme',   // Firefox's "What-You-Cache-Is-What-You-Get"
diff --git a/src/js/start.js b/src/js/start.js
index 6a5868ad..f197607e 100644
--- a/src/js/start.js
+++ b/src/js/start.js
@@ -242,13 +242,6 @@ const onUserSettingsReady = function(fetched) {
     µb.sessionURLFiltering.assign(µb.permanentURLFiltering);
     µb.permanentSwitches.fromString(fetched.hostnameSwitchesString);
     µb.sessionSwitches.assign(µb.permanentSwitches);
-
-    // https://github.com/gorhill/uBlock/issues/1892
-    // For first installation on a battery-powered device, disable generic
-    // cosmetic filtering.
-    if ( µb.firstInstall && vAPI.webextFlavor.soup.has('mobile') ) {
-        userSettings.ignoreGenericCosmeticFilters = true;
-    }
 };
 
 /******************************************************************************/
@@ -333,6 +326,7 @@ const createDefaultProps = function() {
         ].join('\n'),
         'urlFilteringString': '',
         'hostnameSwitchesString': [
+            'no-csp-reports: * true',
             'no-large-media: behind-the-scene false',
             'no-scripting: behind-the-scene false'
         ].join('\n'),
diff --git a/src/js/storage.js b/src/js/storage.js
index 42f26c9c..c128c938 100644
--- a/src/js/storage.js
+++ b/src/js/storage.js
@@ -1326,7 +1326,7 @@
             next = 0;
             var µb = µBlock;
             µb.assets.updateStart({
-                delay: µb.hiddenSettings.autoUpdateAssetFetchPeriod * 1000 || 120000
+                delay: µb.hiddenSettings.autoUpdateAssetFetchPeriod * 1000 || 300000
             });
         }, updateDelay);
     };
@@ -1421,7 +1421,7 @@
             this.loadFilterLists();
         }
         if ( this.userSettings.autoUpdate ) {
-            this.scheduleAssetUpdater(this.hiddenSettings.autoUpdatePeriod * 3600000 || 25200000);
+            this.scheduleAssetUpdater(this.hiddenSettings.autoUpdatePeriod * 3600000 || 10800000);
         } else {
             this.scheduleAssetUpdater(0);
         }
