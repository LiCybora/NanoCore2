diff --git a/src/js/assets.js b/src/js/assets.js
index 8e39f41f..77c531a8 100644
--- a/src/js/assets.js
+++ b/src/js/assets.js
@@ -370,7 +370,7 @@ const registerAssetSource = function(assetKey, dict) {
         entry.contentURL = [];
     }
     if ( typeof entry.updateAfter !== 'number' ) {
-        entry.updateAfter = 5;
+        entry.updateAfter = 3;
     }
     if ( entry.submitter ) {
         entry.submitTime = Date.now(); // To detect stale entries
@@ -943,7 +943,7 @@ api.rmrf = function() {
 /******************************************************************************/
 
 // Asset updater area.
-const updaterAssetDelayDefault = 120000;
+const updaterAssetDelayDefault = 180000;
 const updaterUpdated = [];
 const updaterFetched = new Set();
 
diff --git a/src/js/background.js b/src/js/background.js
index 5633b74c..88ad8fa5 100644
--- a/src/js/background.js
+++ b/src/js/background.js
@@ -39,9 +39,9 @@ const µBlock = (function() { // jshint ignore:line
         allowGenericProceduralFilters: false,
         assetFetchTimeout: 30,
         autoCommentFilterTemplate: '{{date}} {{origin}}',
-        autoUpdateAssetFetchPeriod: 120,
+        autoUpdateAssetFetchPeriod: 180,
         autoUpdateDelayAfterLaunch: 180,
-        autoUpdatePeriod: 7,
+        autoUpdatePeriod: 4,
         blockingProfiles: '11111/#F00 11011/#C0F 11001/#00F 00001',
         cacheStorageAPI: 'unset',
         cacheStorageCompression: true,
@@ -52,7 +52,7 @@ const µBlock = (function() { // jshint ignore:line
         disableWebAssembly: false,
         ignoreRedirectFilters: false,
         ignoreScriptInjectFilters: false,
-        manualUpdateAssetFetchPeriod: 500,
+        manualUpdateAssetFetchPeriod: 1,
         nanoIgnoreThirdPartyWhitelist: false,
         nanoMakeThirdPartyFiltersPrivileged: false,
         nanoMakeUserFiltersPrivileged: false,
@@ -80,7 +80,7 @@ const µBlock = (function() { // jshint ignore:line
             externalLists: [],
             firewallPaneMinimized: true,
             hyperlinkAuditingDisabled: true,
-            ignoreGenericCosmeticFilters: vAPI.webextFlavor.soup.has('mobile'),
+            ignoreGenericCosmeticFilters: false,
             largeMediaSize: 50,
             nanoEditorSoftWrap: false,
             nanoViewerSoftWrap: true,
@@ -130,7 +130,10 @@ const µBlock = (function() { // jshint ignore:line
             'about-scheme',
             'chrome-extension-scheme',
             'chrome-scheme',
+            'edge-extension-scheme',
+            'edge-scheme',
             'moz-extension-scheme',
+            'ms-browser-extension-scheme', // For legacy Edge
             'opera-scheme',
             'vivaldi-scheme',
             'wyciwyg-scheme',   // Firefox's "What-You-Cache-Is-What-You-Get"
diff --git a/src/js/start.js b/src/js/start.js
index 1adf3d2c..bc89d2be 100644
--- a/src/js/start.js
+++ b/src/js/start.js
@@ -328,6 +328,7 @@ const createDefaultProps = function() {
         ].join('\n'),
         'urlFilteringString': '',
         'hostnameSwitchesString': [
+            'no-csp-reports: * true',
             'no-large-media: behind-the-scene false',
         ].join('\n'),
         'lastRestoreFile': '',
diff --git a/src/js/storage.js b/src/js/storage.js
index c5c23d0b..a1e5360f 100644
--- a/src/js/storage.js
+++ b/src/js/storage.js
@@ -1355,7 +1355,7 @@
             next = 0;
             this.assets.updateStart({
                 delay: this.hiddenSettings.autoUpdateAssetFetchPeriod * 1000 ||
-                       120000
+                       180000
             });
         }, updateDelay);
     };
@@ -1441,7 +1441,7 @@
             this.loadFilterLists();
         }
         if ( this.userSettings.autoUpdate ) {
-            this.scheduleAssetUpdater(this.hiddenSettings.autoUpdatePeriod * 3600000 || 25200000);
+            this.scheduleAssetUpdater(this.hiddenSettings.autoUpdatePeriod * 3600000 || 10800000);
         } else {
             this.scheduleAssetUpdater(0);
         }
